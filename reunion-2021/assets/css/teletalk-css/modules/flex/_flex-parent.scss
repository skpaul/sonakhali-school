@mixin display-flex() {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}



@mixin flex-flow($direction: row, $wrap: nowrap) {
    -ms-flex-wrap: $wrap;
    -ms-flex-direction: $direction;
    -webkit-flex-flow: $direction $wrap;
    flex-flow: $direction $wrap;
}

@mixin flex-wrap($wrap: wrap) {
    -ms-flex-wrap: $wrap;
    -webkit-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

@mixin justify-content-start() {
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    justify-content: flex-start;
}

@mixin justify-content-end() {
    -ms-flex-pack: end;
    -webkit-justify-content: flex-end;
    justify-content: flex-end;
}

@mixin justify-content-center() {
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
}

@mixin justify-content-space-between() {
    -ms-flex-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
}

@mixin justify-content-space-around() {
    -ms-flex-pack: distribute;
    -webkit-justify-content: space-around;
    justify-content: space-around;
}

@mixin justify-content-space-evenly() {
    -ms-flex-pack: space-evenly;
    -webkit-justify-content: space-evenly;
    justify-content: space-evenly;
}

@mixin align-items($align: stretch) {
    @include ms-align-items($align);
    -webkit-align-items: $align;
    align-items: $align;
}

@mixin ms-align-items($align) {
    @if $align == 'flex-start' {
        -ms-flex-align: start;
    } @else if $align == 'flex-end' {
        -ms-flex-align: end;
    } @else {
        -ms-flex-align: $align;
    }
}


@mixin align-content($align: stretch) {
    @include ms-align-content($align);
    -webkit-align-content: $align;
    align-content: $align;
}
@mixin ms-align-content($align) {
    @if $align == 'flex-start' {
        -ms-flex-line-pack: start;
    } @else if $align == 'flex-end' {
        -ms-flex-line-pack: end;
    } @else if $align == 'space-between' {
        -ms-flex-line-pack: justify;
    } @else if $align == 'space-around' {
        -ms-flex-line-pack: distribute;
    } @else {
        -ms-flex-line-pack: $align;
    }
}

@mixin flex-direction($direction: row) {
    -ms-flex-direction: $direction;
    -webkit-flex-direction: $direction;
    flex-direction: $direction;
}


.flex{
    @include display-flex();

    // Row or Column ----->
    // flex-direction which determines whether the child elements 
    //are arranged in a row (default) or stacked in a column. 
    //This arrangement or flow of content is also known as the main axis, 
    //whilst the opposite direction is known as the cross axis.
    &.row{
        @include flex-direction(row);
    }

    &.row-reverse {
        @include flex-direction(row-reverse);
    }
    
    &.column {
        @include flex-direction(column);
    }
    
    &.column-reverse {
        @include flex-direction(column-reverse);
    }
    // <------ Row or Column

    // Wrap or no wrap ----->
    // flex-wrap property determines if the child elements will wrap in the container or not wrap â€“ 
    //elements that dont wrap may either shrink in width or disappear from the viewport.

    // nowrap (default): all flex items will be on one line

    &.wrap{
        @include flex-wrap(wrap);
    }
    // <-------- Wrap or no wrap

    // Horizontal ----->
    // This property positions the child items in the container, 
    // placing them at the start, at the end, the centre, 
    // centered with equal space or spaced from edge to edge with equal space.

    // justify-content: flex-start (Horizontaly, default)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    &.justify-content-start, &.h-left{
        @include justify-content-start();
    }

    // justify-content: flex-end (Horizontaly right)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    &.justify-content-end, &.h-right{
        @include justify-content-end();
    }

    // justify-content: center (Horizontaly center)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    &.justify-content-center, &.h-center{
        @include justify-content-center();
    }

    // justify-content: space-between (Horizontaly)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    &.justify-content-space-between, &.h-space-between{
        @include justify-content-space-between();
    }

    // justify-content: space-around (Horizontaly)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    &.justify-content-space-around, &.h-space-around{
        @include justify-content-space-around();
    }

     // justify-content: space-evenly (Horizontaly)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
     &.justify-content-space-evenly, &.h-space-evenly{
        @include justify-content-space-evenly();
    }
    // <------Horizontal 

    // Vertical alignment

    // align-items: stretch (default)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    &.align-items-stretch, &.full-height{
        @include align-items(stretch);
    }
    // align-items: flex-start (vertically top, single line)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    &.align-items-start, &.v-top{
        @include align-items(flex-start);
    }

    // align-items: flex-end (vertically bottom, single line)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    &.align-items-end, &.v-bottom{
        @include align-items(flex-end);
    }

    // align-items: center (vertically center, single line)  ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    &.align-items-center, &.v-center{
        @include align-items(center);
    }

    // align-content
    // It is for MULTI-LINE flexible boxes. 
    // It has no effect when items are in a single line. 
    // It aligns the whole structure according to its value. 
    // align-content works best when there are items that span multiple rows 
    //and when the row is set to wrap, so a bit different to align-items as just previously described.

     // align-content: flex-start (vertically top, multiline )  
     // ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/,   https://stackoverflow.com/questions/27539262/whats-the-difference-between-align-content-and-align-items
     &.align-content-flex-start{
        @include align-content(flex-start);
    }

    // align-content: flex-end (vertically bottom, multiline )  
    // ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/,   https://stackoverflow.com/questions/27539262/whats-the-difference-between-align-content-and-align-items
    &.align-content-flex-end{
        @include align-content(flex-end);
    }

    // align-content: center (vertically center, multiline ) 
    // ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/,   https://stackoverflow.com/questions/27539262/whats-the-difference-between-align-content-and-align-items
    &.align-content-center{
        @include align-content(center);
    }

    // align-content: stretch (vertically stretch, multiline ) 
    // ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/,   https://stackoverflow.com/questions/27539262/whats-the-difference-between-align-content-and-align-items
    &.align-content-stretch{
        @include align-content(stretch);
    }

    
    // align-content: space-between (vertically, multiline )  
    // ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/,   https://stackoverflow.com/questions/27539262/whats-the-difference-between-align-content-and-align-items
    &.align-content-space-between{
        @include align-content(space-between);
    }

    // align-content: space-around (vertically, multiline )  
    // ref: https://css-tricks.com/snippets/css/a-guide-to-flexbox/,   https://stackoverflow.com/questions/27539262/whats-the-difference-between-align-content-and-align-items
    &.align-content-space-around{
        @include align-content(space-around);
    }

}
